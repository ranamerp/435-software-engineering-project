{"version":3,"sources":["images/legside.jpg","components/Legend.jsx","components/Loading.jsx","components/NavSearchBar.jsx","components/About.jsx","components/Sourcing.jsx","components/not_found.jsx","App.js","reportWebVitals.js","index.js"],"names":["Legend","src","img","alt","Loading","style","height","display","justifyContent","alignItems","className","role","MyMap","React","lazy","TimeSeries","NavSearchBar","props","dummy_data","headers","label","key","state","startDate","moment","startOf","endDate","disaster","search","data","tweets","startDate_temp","endDate_temp","disaster_temp","search_temp","event","this","setState","target","value","db","temp_array","axios","post","then","response","objects","JSON","parse","stringify","push","e_t","s_t","updateDate_temp","updateSearch","updateDisaster","Navbar","bg","variant","width","Brand","href","Nav","Link","Form","inline","Group","startDateId","endDateId","onDatesChange","updateDate","bind","focusedInput","onFocusChange","isOutsideRange","block","Control","type","placeholder","onChange","updateSearch_temp","updateDisaster_temp","Button","onClick","submit_Button","fontWeight","fallback","Component","About","Jumbotron","textAlign","fontSize","Sourcing","not_found","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c7fe7f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/legside.b5f1d509.jpg\";","import React from 'react';\r\nimport img from \"./../images/legside.jpg\"\r\n\r\n\r\nconst Legend = () => {\r\n    return ( \r\n    <div>\r\n        <center><img src={img} alt = \"White: Nothing, Gray: Very Few, Yellow: Few, Orange:Some, Red: A Bunch, Dark Red: A Ton\" /></center>\r\n        \r\n    </div> );\r\n}\r\n \r\nexport default Legend;","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return ( \r\n    <div style={{\r\n    height:\"100vh\", \r\n    display: \"flex\", \r\n    justifyContent:\"center\", \r\n    alignItems:\"center\"\r\n    }}>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div className=\"spinner-grow text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div className=\"spinner-grow text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <div className=\"spinner-grow text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n        );\r\n}\r\n \r\nexport default Loading;","import React, { Component, Suspense} from \"react\";\r\nimport { Form, Nav, Navbar, Button } from \"react-bootstrap\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"./customDatePickerWidth.css\";\r\nimport moment from \"moment\"\r\nimport Legend from \"./Legend\";\r\nimport Loading from \"./Loading\"\r\nimport tweets from \"../data/tweets.json\"\r\nimport axios from \"axios\"\r\nimport { CSVLink } from \"react-csv\";\r\nconst MyMap = React.lazy(() => import('./MyMap'));\r\nconst TimeSeries = React.lazy(() => import('./TimeSeries'));\r\n\r\n\r\nclass NavSearchBar extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            startDate: moment().startOf(\"week\"),\r\n            endDate: moment().startOf(\"week\"),\r\n            disaster: \"\",\r\n            search: \"\",\r\n            data: tweets,\r\n            startDate_temp: moment().startOf(\"week\"),\r\n            endDate_temp: moment().startOf(\"week\"),\r\n            disaster_temp: \"\",\r\n            search_temp: \"\",\r\n            \r\n        }\r\n    }\r\n    dummy_data= []\r\n    updateSearch(event){\r\n        this.setState({\r\n            search: event\r\n        })\r\n        \r\n    }\r\n    updateSearch_temp(event){\r\n        this.setState({\r\n            search_temp: event.target.value\r\n        })\r\n        \r\n    }\r\n    \r\n    async updateDisaster(event){\r\n\r\n        this.setState({\r\n            disaster: event\r\n        })\r\n        var db = \"\"\r\n        var temp_array = []\r\n        await axios.post('https://twitter-disaster-master.herokuapp.com/refresh_data', [this.state.disaster,this.state.startDate, this.state.endDate])\r\n            .then((response) => {\r\n                db = (JSON.parse(JSON.stringify(response.data)))\r\n                for(var objects in db){\r\n                    temp_array.push(db[objects])\r\n                }\r\n                this.dummy_data = temp_array\r\n                \r\n        })\r\n\r\n        axios.post('https://twitter-disaster-master.herokuapp.com/refresh_data', [this.state.disaster,this.state.startDate, this.state.endDate])\r\n            .then((response) => {\r\n                db = (JSON.parse(JSON.stringify(response.data)))\r\n                for(var objects in db){\r\n                    temp_array.push(db[objects])\r\n                }\r\n                this.dummy_data = temp_array\r\n                \r\n        })\r\n        \r\n\r\n        this.setState({\r\n            data: this.dummy_data\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    async updateDisaster_temp(event){\r\n\r\n        this.setState({\r\n            disaster_temp: event.target.value\r\n        })\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n    updateDate(event){\r\n        this.setState({\r\n            startDate:event.target.value,\r\n            endDate:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    updateDate_temp(event){\r\n        this.setState({\r\n            startDate_temp:event[0],\r\n            endDate_temp:event[1]\r\n        })\r\n        \r\n    }\r\n\r\n    submit_Button(event){\r\n        var e_t =this.state.startDate\r\n        var s_t = this.state.endDate\r\n        this.updateDate_temp([s_t,e_t])\r\n        this.updateSearch(this.state.search_temp)\r\n        this.updateDisaster(this.state.disaster_temp)\r\n        \r\n    }\r\n    headers = [\r\n        { label: 'created_at', key: 'created_at' },\r\n        { label: 'user.location', key: 'user.location' },\r\n      ];\r\n     \r\n\r\n    render() { \r\n        \r\n        return(\r\n            <div>\r\n                <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"10vh\"}}>\r\n                    <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"./\">Home</Nav.Link>\r\n                        <Nav.Link href=\"./About\">About</Nav.Link>\r\n                        <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline >\r\n                        <Form.Group> \r\n\r\n                        <DateRangePicker\r\n                            startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                            endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                            startDateId=\"5\"\r\n                            endDateId=\"5\"\r\n                            onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\r\n                            updateDate={this.updateDate.bind(this)}\r\n                            focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                            onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired, \r\n                            isOutsideRange={() => false}\r\n                            block=\"true\"\r\n                            style={{height:\"3vh\", width:\"10vw\"}}\r\n                            \r\n                            />\r\n                        <div>&nbsp;</div>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                placeholder=\"Enter Location\" \r\n                                value = {this.state.search_temp} \r\n                                onChange={this.updateSearch_temp.bind(this)}\r\n                                style={{height:\"5vh\", width:\"10vw\"}}\r\n                            />\r\n                            <div>&nbsp;</div>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                placeholder=\"Enter Disaster\" \r\n                                value = {this.state.disaster_temp} \r\n                                onChange={this.updateDisaster_temp.bind(this)}\r\n                                style={{height:\"5vh\", width:\"10vw\"}}\r\n                            />\r\n                            <div>&nbsp;</div>\r\n                            <Button\r\n                                variant=\"warning\"\r\n                                onClick={this.submit_Button.bind(this)}\r\n                                style={{height:\"6vh\", width:\"10vw\", fontWeight:\"bold\", }}\r\n                            >Submit</Button>\r\n                            &nbsp;\r\n\r\n                            <CSVLink className=\"mr-auto\" data={this.state.data} headers={this.headers} >\r\n\r\n                            <Button\r\n                                variant=\"success\"\r\n                                onClick={this.submit_Button.bind(this)}\r\n                                style={{height:\"6vh\", width:\"8vw\", fontWeight:\"bold\", }}\r\n                            >Download</Button>\r\n                            </CSVLink>\r\n                            &nbsp;\r\n                            &nbsp;\r\n\r\n\r\n                        </Form.Group>\r\n                        \r\n                    </Form>\r\n                </Navbar>\r\n                \r\n                <div>\r\n                <Suspense fallback={Loading} >\r\n                    <center>\r\n                    <TimeSeries\r\n                        data = {this.state.data}\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                    />\r\n                    </center>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <MyMap\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        search={this.state.search_temp}\r\n                        data = {this.state.data}\r\n                    /> \r\n                    <Legend/> \r\n                    \r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NavSearchBar;","import React from 'react';\r\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst About = () => {\r\n    return ( \r\n    <div>\r\n            \r\n            <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"10vh\"}}>  \r\n            <br></br>\r\n                <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"./\">Home</Nav.Link>\r\n                    <Nav.Link href=\"./About\">About</Nav.Link>\r\n                    <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                </Nav>\r\n                <br></br>\r\n                <div style={{height: \"12vh\"}}>\r\n                    <br></br>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                \r\n            </Navbar>\r\n            \r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <Jumbotron style={{width:\"60vw\",height:\"60vh\" , textAlign:\"left\", fontSize:\"3vh\"}}>\r\n                    Dedicated to our heroes in the Fire Department.\r\n                    <br></br>\r\n\r\n                    Created as a low latency service to alert first responders as well as the general population to give them information on disasters.\r\n                    Group of SIU students made this website using Machine Learning, Graphing, Mapping, and Databases. This is created to illustrate the amount of reported tweets about a given disaster such that you could ascertain whether a disaster is occurring and how often they occur within a given timeframe, as well as how often they occur throughout a given season.\r\n                    <br></br>\r\n                    Brought to you by, \r\n                    <br></br>\r\n                    Our Team, and Our School SIU! GO SALUKIS!!!\r\n\r\n                </Jumbotron>\r\n            </center>\r\n        </div>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default About;","import React from 'react';\r\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst Sourcing = () => {\r\n    return ( \r\n    <div>\r\n                \r\n        <header style={{width:\"100vw\", height: \"10vh\"}}>\r\n            <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"10vh\"}}>  \r\n                <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"./\">Home</Nav.Link>\r\n                    <Nav.Link href=\"./About\">About</Nav.Link>\r\n                    <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                </Nav>\r\n                \r\n            </Navbar>\r\n            \r\n        </header>\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <Jumbotron style={{width:\"60vw\",height:\"80vh\" , textAlign:\"left\", fontSize:\"3vh\"}}>\r\n                    Thanks to all the creators of the resources we used\r\n                    <br></br>\r\n                    Following Resources we used\r\n                    <br></br>\r\n                    React\r\n                    <br></br>\r\n                    Flask\r\n                    <br></br>\r\n                    Bootstrap\r\n                    <br></br>\r\n                    Leaflet\r\n                    <br></br>\r\n                    Python\r\n                    <br></br>\r\n                    Javascript\r\n                    <br></br>\r\n                    MongoDB\r\n                    <br></br>\r\n                    Chart2-React-JS\r\n                    <br></br>\r\n                    Pandas\r\n                    <br></br>\r\n                    Scikit-Learn\r\n                    <br></br>\r\n                    Tweepy\r\n                    <br></br>\r\n                    Pymongo\r\n                    \r\n                </Jumbotron>\r\n            </center>\r\n        </div>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default Sourcing;","import React from 'react';\r\n\r\n\r\n\r\nconst not_found = () => {\r\n    return ( \r\n    \r\n    <div>\r\n\r\n        <h1>404 Not Found</h1>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default not_found;","import React from 'react';\r\nimport NavSearchBar from './components/NavSearchBar'\r\nimport About from './components/About'\r\nimport Sourcing from './components/Sourcing'\r\nimport not_found from './components/not_found'\r\n//import NavSearchBar from './components/NavSearchBar'\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch> \r\n        <Route\r\n          exact path=\"/435-twitter-disaster-master/\" component={NavSearchBar}\r\n        />\r\n        <Route\r\n          exact path=\"/\" component={NavSearchBar}\r\n        />\r\n        <Route\r\n        path=\"/About\" component={About}\r\n        />\r\n        <Route\r\n        path=\"/Sourcing\" component={Sourcing}\r\n        />\r\n        <Route\r\n        component={not_found}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n    //<NavSearchBar/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport 'react-dates/initialize';\r\nimport 'react-with-styles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}