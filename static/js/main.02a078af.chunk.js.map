{"version":3,"sources":["components/MyMap.jsx","images/legside.jpg","components/Legend.jsx","components/TimeSeries.jsx","components/NavSearchBar.jsx","components/About.jsx","components/Sourcing.jsx","components/not_found.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyMap","stateStyle","fillColor","fillOpacity","color","weight","countryStyle","OnEachState","state","layer","state_name","properties","NAME","Start","convertDate2","JSON","stringify","props","startDate","End","endDate","Dte","convertDate","data","created_at","reported_incidents","tweet2","length","Location_Name","user","location","includes","search","STUSPS","compareDate","state_Count","options","bindPopup","OnEachCountry","country","country_name","ADM0_A3","country_Count","date","date2","substring","concat","start","end","parseInt","Map","style","height","width","zoom","this","maxBounds","center","minZoom","ref","map","GeoJSON","countries","features","onEachFeature","Math","random","states","Component","Legend","src","img","alt","TimeSeries","filtered_data","chart_data","labels","datasets","label","fill","backgroundColor","borderColor","Tweet_Date","Date","modified_array","push","object_array","i","count","dates","tweets","temp_count","temp_date","quantity","date_to_date_range","dataFieldMaker","NavSearchBar","dummy_data","moment","startOf","disaster","event","setState","target","value","db","temp_array","axios","post","then","response","objects","parse","console","log","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","Group","startDateId","endDateId","onDatesChange","updateDate","bind","focusedInput","onFocusChange","isOutsideRange","Control","type","placeholder","onChange","updateSearch","updateDisaster","About","Jumbotron","textAlign","fontSize","Sourcing","not_found","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a078af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport countries from './../data/countries.json';\r\nimport states from './../data/states.json';\r\nimport {Map, GeoJSON} from \"react-leaflet\"\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./MyMap.css\";\r\n\r\n\r\nclass MyMap extends Component {\r\n   \r\n    \r\n    stateStyle = {\r\n        fillColor: \"white\",\r\n        fillOpacity: 1,\r\n        color: \"black\",\r\n        weight: 0.5\r\n\r\n    };\r\n\r\n    countryStyle = {\r\n        fillColor: \"white\",\r\n        fillOpacity: 1,\r\n        color: \"black\",\r\n        weight: 2\r\n\r\n    };\r\n    convertDate(date){\r\n        var date2 = \"\"\r\n        switch(date.substring(5,8)){\r\n            case \"Jan\":\r\n                date2 = date2.concat(\"1\");\r\n            break;\r\n            case \"Feb\":\r\n                date2 = date2.concat(\"2\");\r\n            break;\r\n            case \"Mar\":\r\n                date2 = date2.concat(\"3\");\r\n            break;\r\n            case \"Apr\":\r\n                date2 = date2.concat(\"4\");\r\n            break;\r\n            case \"May\":\r\n                date2 = date2.concat(\"5\");\r\n            break;\r\n            case \"Jun\":\r\n                date2 = date2.concat(\"6\");\r\n            break;\r\n            case \"Jul\":\r\n                date2 = date2.concat(\"7\");\r\n            break;\r\n            case \"Aug\":\r\n                date2 = date2.concat(\"8\");\r\n            break;\r\n            case \"Sep\":\r\n                date2 = date2.concat(\"9\");\r\n            break;\r\n            case \"Oct\":\r\n                date2 = date2.concat(\"10\");\r\n            break;\r\n            case \"Nov\":\r\n                date2 = date2.concat(\"11\");\r\n            break;\r\n            case \"Dec\":\r\n                date2 = date2.concat(\"12\");\r\n            break;\r\n            default:\r\n                date2 = date2.concat(\"??\");\r\n                break;\r\n            }\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(9,11)); //day\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(27,31)); //year\r\n        return date2;\r\n    }\r\n\r\n    convertDate2(date){\r\n        var date2 = \"\";\r\n        date2 = date2.concat(date.substring(6,8)); //month\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(9,11)); //day\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(1,5)); //year\r\n        return date2;\r\n    }\r\n\r\n    compareDate(start,end,date){\r\n        if(parseInt(start.substring(6)) > parseInt(date.substring(6))){ // if the year is bigger in chosen start date over tweet\r\n            return false;\r\n        }\r\n        if((parseInt(start.substring(6)) === parseInt(date.substring(6)) && // if its in the same year\r\n            parseInt(start.substring(0,2)) > parseInt(date.substring(0,2)))){ // month diff\r\n            return false;\r\n        }\r\n        if((parseInt(start.substring(6)) === parseInt(date.substring(6)) && // if its in the same year\r\n            parseInt(start.substring(0,2)) === parseInt(date.substring(0,2)) && // if its in the same month too\r\n            parseInt(start.substring(3,5)) > parseInt(date.substring(3,5)))){ // day diff\r\n            return false;\r\n        }\r\n        if(parseInt(end.substring(6)) < parseInt(date.substring(6))){ // if the year is smaller in chosen end date over tweet\r\n            return false;\r\n        }\r\n        if((parseInt(end.substring(6)) === parseInt(date.substring(6)) && // if its in the same year\r\n            parseInt(end.substring(0,2)) < parseInt(date.substring(0,2)))){ // month diff\r\n            return false;\r\n        }\r\n        if((parseInt(end.substring(6)) === parseInt(date.substring(6)) && // if its in the same year\r\n            parseInt(end.substring(0,2)) === parseInt(date.substring(0,2)) && // if its in the same month too\r\n            parseInt(end.substring(3,5)) < parseInt(date.substring(3,5)))){ // day diff\r\n            return false;\r\n        }\r\n        return true;\r\n        \r\n    }\r\n\r\n    //`````````````````````````````````````````````````````````````````````````\r\n\r\n    OnEachState = (state, layer) => { // loops thru every state\r\n        const state_name = state.properties.NAME; // name of state\r\n        var Start = this.convertDate2(JSON.stringify(this.props.startDate)); \r\n        var End = this.convertDate2(JSON.stringify(this.props.endDate)); \r\n        var Dte = this.convertDate(JSON.stringify(this.props.data[1].created_at)); \r\n       // var Date = this.props.startDate;\r\n        state.properties.reported_incidents = 0; // reported incidents\r\n        for(var tweet2 = 0; tweet2<this.props.data.length;tweet2++){ // loops thru tweet list\r\n            Dte = this.convertDate(JSON.stringify(this.props.data[tweet2].created_at)); \r\n            var Location_Name = JSON.stringify(this.props.data[tweet2].user.location);\r\n            if( (Location_Name.includes(this.props.search))\r\n            && (Location_Name.includes(state.properties.NAME) || Location_Name.includes(state.properties.STUSPS)) \r\n            && (this.compareDate(Start,End,Dte)) ){ // checks if the tweet location matches any state name\r\n                state.properties.reported_incidents++;\r\n            }\r\n        }\r\n        const state_Count = state.properties.reported_incidents;\r\n \r\n        if(state_Count === 0){\r\n            layer.options.fillColor = \"white\";\r\n        }else if(state_Count < 5){\r\n            layer.options.fillColor = \"gray\";\r\n        }else if(state_Count < 100){\r\n            layer.options.fillColor = \"yellow\";\r\n        }else if(state_Count < 500){\r\n            layer.options.fillColor = \"orange\";\r\n        }else if(state_Count < 1000){\r\n            layer.options.fillColor = \"red\";\r\n        }else if(state_Count < 5000){\r\n            layer.options.fillColor = \"dark red\";\r\n        }\r\n        \r\n        layer.bindPopup(`State: ${state_name} <br> Tweets: ${state_Count}`);\r\n        \r\n    }\r\n\r\n    //```````````````````````````````````````````````````````````````````````\r\n\r\n    OnEachCountry = (country, layer) => { // loops thru every country\r\n\r\n        const country_name = country.properties.NAME; // name of country\r\n        var Start = this.convertDate2(JSON.stringify(this.props.startDate)); \r\n        var End = this.convertDate2(JSON.stringify(this.props.endDate)); \r\n        var Dte = this.convertDate(JSON.stringify(this.props.data[1].created_at)); \r\n       // var Date = this.props.startDate\r\n       // if(this.compareDate(Start,End,Dte)){//\r\n         //   Date = \"yeet boolin\" ;\r\n        //}\r\n        //this.convertDate(JSON.stringify(this.props.data[1].created_at));\r\n        country.properties.reported_incidents = 0; // reported incidents\r\n        for(var tweet2 = 0; tweet2<this.props.data.length;tweet2++){ // loops thru tweet list\r\n            var Location_Name = JSON.stringify(this.props.data[tweet2].user.location);\r\n            Dte = this.convertDate(JSON.stringify(this.props.data[tweet2].created_at)); \r\n            //\r\n            if(    (Location_Name.includes(this.props.search))\r\n                    && \r\n                    (Location_Name.includes(country.properties.NAME) || Location_Name.includes(country.properties.ADM0_A3))\r\n                    && \r\n                    (this.compareDate(Start,End,Dte)) )\r\n            { // checks if the tweet location matches any country name and date\r\n                country.properties.reported_incidents++;\r\n            }\r\n        }\r\n        if(country.properties.NAME === \"Norway\"){\r\n            country.properties.reported_incidents = 0 ;\r\n        }\r\n        const country_Count = country.properties.reported_incidents;\r\n\r\n        if(country_Count === 0){\r\n            layer.options.fillColor = \"white\";\r\n        }else if(country_Count < 5){\r\n            layer.options.fillColor = \"gray\";\r\n        }else if(country_Count < 100){\r\n            layer.options.fillColor = \"yellow\";\r\n        }else if(country_Count < 500){\r\n            layer.options.fillColor = \"orange\";\r\n        }else if(country_Count < 1000){\r\n            layer.options.fillColor = \"red\";\r\n        }else if(country_Count < 5000){\r\n            layer.options.fillColor = \"dark red\";\r\n        }\r\n        \r\n        layer.bindPopup(`Country: ${country_name} <br> Tweets: ${country_Count} `);\r\n        \r\n    }\r\n    \r\n    //```````````````````````````````````````````````````````````````````````\r\n    //```````````````````````````````````````````````````````````````````````\r\n    render() { \r\n        return (\r\n        <div>\r\n            <Map \r\n                style={{height:\"50vh\", width: \"50vw\",}}\r\n                zoom={JSON.stringify(this.props.startDate).substring(1,2)}\r\n                maxBounds={[[-60,-180], [80,220]]}\r\n                center= {[40,40]}\r\n                minZoom={2}\r\n                ref={(ref) => { this.map = ref; }}\r\n\r\n               \r\n            >\r\n            \r\n                <GeoJSON\r\n                    key={JSON.stringify(this.props.startDate).concat(this.props.endDate).concat(this.props.search).concat(JSON.stringify(Math.random(5000000)))}\r\n                    style = {this.countryStyle}\r\n                    data = {countries.features}\r\n                    \r\n                    onEachFeature = {this.OnEachCountry}\r\n                    \r\n                ></GeoJSON>\r\n                <GeoJSON\r\n                    key={JSON.stringify(this.props.startDate).concat(this.props.endDate).concat(this.props.search)}\r\n                    style = {this.stateStyle}\r\n                    data = {states.features}\r\n                    onEachFeature = {this.OnEachState}\r\n                ></GeoJSON>\r\n\r\n            </Map>\r\n            <br></br>\r\n\r\n            <br></br>\r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default MyMap;","export default __webpack_public_path__ + \"static/media/legside.b5f1d509.jpg\";","import React from 'react';\r\nimport img from \"./../images/legside.jpg\"\r\n\r\n\r\nconst Legend = () => {\r\n    return ( \r\n    <div>\r\n        <center><img src={img} alt = \"White: Nothing, Gray: Very Few, Yellow: Few, Orange:Some, Red: A Bunch, Dark Red: A Ton\" /></center>\r\n        \r\n    </div> );\r\n}\r\n \r\nexport default Legend;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\nclass TimeSeries extends Component {\r\n    \r\n    filtered_data = []\r\n\r\n   chart_data = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Tweets\",\r\n        data: [],\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"rgba(75,192,192,1)\"\r\n      }\r\n    ]\r\n  };\r\n\r\n    convertDate(date){\r\n        var date2 = \"\"\r\n        switch(date.substring(5,8)){\r\n            case \"Jan\":\r\n                date2 = date2.concat(\"1\");\r\n            break;\r\n            case \"Feb\":\r\n                date2 = date2.concat(\"2\");\r\n            break;\r\n            case \"Mar\":\r\n                date2 = date2.concat(\"3\");\r\n            break;\r\n            case \"Apr\":\r\n                date2 = date2.concat(\"4\");\r\n            break;\r\n            case \"May\":\r\n                date2 = date2.concat(\"5\");\r\n            break;\r\n            case \"Jun\":\r\n                date2 = date2.concat(\"6\");\r\n            break;\r\n            case \"Jul\":\r\n                date2 = date2.concat(\"7\");\r\n            break;\r\n            case \"Aug\":\r\n                date2 = date2.concat(\"8\");\r\n            break;\r\n            case \"Sep\":\r\n                date2 = date2.concat(\"9\");\r\n            break;\r\n            case \"Oct\":\r\n                date2 = date2.concat(\"10\");\r\n            break;\r\n            case \"Nov\":\r\n                date2 = date2.concat(\"11\");\r\n            break;\r\n            case \"Dec\":\r\n                date2 = date2.concat(\"12\");\r\n            break;\r\n            default:\r\n                date2 = date2.concat(\"??\");\r\n                break;\r\n            }\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(9,11)); //day\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(27,31)); //year\r\n        return date2;\r\n    }\r\n\r\n    convertDate2(date){\r\n        var date2 = \"\";\r\n        date2 = date2.concat(date.substring(6,8)); //month\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(9,11)); //day\r\n        date2 = date2.concat(\"/\");\r\n        date2 = date2.concat(date.substring(1,5)); //year\r\n        return date2;\r\n    }\r\n\r\n    dataFieldMaker(){\r\n        var Start = this.convertDate2(JSON.stringify(this.props.startDate)); // Nav Bar's Search Date\r\n        var End = this.convertDate2(JSON.stringify(this.props.endDate)); // Nav Bar's End Date\r\n        var Tweet_Date = this.convertDate(JSON.stringify(this.props.data[0].created_at)) // First Tweet's Date\r\n        var Date = Start // Set up for while loop, so the date will loop from start to end and add the array to the state\r\n        var modified_array = []\r\n        modified_array.push(Start) //adds date to our list of dates we will be using for charting\r\n        while( ((Date.substring(0,2) !== End.substring(0,2)) && (Date.substring(6) === End.substring(6)))\r\n        ^( ( parseInt(Date.substring(6)) < parseInt(End.substring(6) )) )\r\n        ){ // checks if the date's year hits the end's year or if theyre on the same year if the month hits\r\n            \r\n            if(parseInt(Date.substring(0,2)) < 12){ // Is it the last month of the year, if so were updating the year and reseting the month\r\n                Date = JSON.stringify(parseInt(Date.substring(0,2))+1).concat(Date.substring(2)) // Makes the date bigger by a month compared to the last date given, default being the start date\r\n                if(Date === End){ // eyoo if we got the same date as the End date we don't have to count it twice\r\n                    break;\r\n                }\r\n                modified_array.push(Date) // adds date to our list of dates we will be using for charting\r\n            }else{\r\n                Date = \"01\".concat(Date.substring(2,6)).concat(JSON.stringify(parseInt(Date.substring(6))+1)) // checks if we crossed a year, if we did, the next date starts in the 1st month and a new year\r\n                if(Date === End){ // no dojble count\r\n                    break;\r\n                }\r\n                modified_array.push(Date) // adds date to our list of dates we will be using for charting\r\n            }\r\n        }\r\n        modified_array.push(End)\r\n        var object_array = []\r\n        \r\n        for(var i =0; i< modified_array.length;i++){\r\n            object_array.push({\r\n                date:modified_array[i],\r\n                count: 0\r\n            })\r\n            this.filtered_data = object_array\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        //````````````````````````````````````````````````````````````\r\n        // Dates done above, mapping tweets done below\r\n        //````````````````````````````````````````````````````````````\r\n\r\n        for(var dates = 0; dates < this.filtered_data.length; dates++){\r\n            this.filtered_data[dates].count = 0\r\n        }\r\n        for(var tweets = 0; tweets<this.props.data.length;tweets++){ // loops through all the given tweets\r\n            Tweet_Date = this.convertDate(JSON.stringify(this.props.data[tweets].created_at)) // turns the tweet's date into a comparable format \r\n            \r\n            for(dates = 0; dates < this.filtered_data.length; dates++){ // loops thru all of the dates we created as points in the line graph\r\n                if((     (parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[dates].date.substring(6))) &&  // year\r\n                        (parseInt(Tweet_Date.substring(0,2)) === parseInt(this.filtered_data[dates].date.substring(0,2))) && // month\r\n                        (parseInt(Tweet_Date.substring(3,5)) < parseInt(this.filtered_data[dates].date.substring(3,5))) // checks if its in the same month but before it so it gets counted\r\n                    )^(\r\n                        ((parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[dates].date.substring(6))) && // or the month before it but after the last counted point in the last month\r\n                        (parseInt(Tweet_Date.substring(0,2)) === (parseInt(this.filtered_data[dates].date.substring(0,2))-1)   ) && \r\n                        (parseInt(Tweet_Date.substring(3,5)) > parseInt(this.filtered_data[dates].date.substring(3,5))))\r\n                    )){\r\n                    this.filtered_data[dates].count = this.filtered_data[dates].count+1\r\n                }\r\n            }\r\n            this.filtered_data[this.filtered_data.length-1].count =0\r\n            this.filtered_data[0].count =0\r\n\r\n        if((     (parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(6))) &&  // year\r\n            (parseInt(Tweet_Date.substring(0,2)) === parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(0,2))) && // month\r\n            (parseInt(Tweet_Date.substring(3,5)) < parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(3,5))) // checks if its in the same month but before it so it gets counted\r\n        )^(\r\n            ((parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(6))) && // or the month before it but after the last counted point in the last month\r\n            (parseInt(Tweet_Date.substring(0,2)) === (parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(0,2))-1)   ) && \r\n            (parseInt(Tweet_Date.substring(3,5)) > parseInt(this.filtered_data[this.filtered_data.length-1].date.substring(3,5))))\r\n        )){\r\n        this.filtered_data[this.filtered_data.length-1].count = this.filtered_data[this.filtered_data.length-1].count+1\r\n        }\r\n\r\n        if((     (parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[0].date.substring(6))) &&  // year\r\n            (parseInt(Tweet_Date.substring(0,2)) === parseInt(this.filtered_data[0].date.substring(0,2))) && // month\r\n            (parseInt(Tweet_Date.substring(3,5)) < parseInt(this.filtered_data[0].date.substring(3,5))) // checks if its in the same month but before it so it gets counted\r\n        )^(\r\n            ((parseInt(Tweet_Date.substring(6)) === parseInt(this.filtered_data[0].date.substring(6))) && // or the month before it but after the last counted point in the last month\r\n            (parseInt(Tweet_Date.substring(0,2)) === (parseInt(this.filtered_data[0].date.substring(0,2))-1)   ) && \r\n            (parseInt(Tweet_Date.substring(3,5)) > parseInt(this.filtered_data[0].date.substring(3,5))))\r\n        )){\r\n            this.filtered_data[0].count = this.filtered_data[0].count+1\r\n        }\r\n\r\n\r\n    }\r\n        if(Start === End){\r\n            this.filtered_data[this.filtered_data.length-1].count =0\r\n            this.filtered_data[0].count =0\r\n        }\r\n        var temp_count = []\r\n        var temp_date = []\r\n        for(var quantity = 0; quantity < this.filtered_data.length;quantity++){\r\n            temp_count.push(parseInt(this.filtered_data[quantity].count))\r\n            temp_date.push(this.date_to_date_range(this.filtered_data, quantity))\r\n        }\r\n        this.chart_data.labels = temp_date \r\n        this.chart_data.datasets[0].data = temp_count\r\n        \r\n    }\r\n    date_to_date_range(date, quantity){\r\n        if(quantity !== 0){\r\n            return (date[quantity-1].date.concat(\"-\").concat(date[quantity].date))\r\n        }\r\n        return date[quantity].date.concat(\"-\").concat(date[quantity].date)\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div style={{height:\"50vh\", width: \"50vw\",}}>\r\n\r\n                <br></br>\r\n                {this.dataFieldMaker()}\r\n                <Line\r\n                data = {this.chart_data}\r\n                />          \r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TimeSeries;","import React, { Component } from \"react\";\r\nimport { Form, Nav, Navbar } from \"react-bootstrap\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport MyMap from \"./MyMap\";\r\nimport moment from \"moment\"\r\nimport Legend from \"./Legend\";\r\nimport TimeSeries from \"./TimeSeries\"\r\nimport tweets from \"../data/tweets.json\"\r\nimport axios from \"axios\"\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\n\r\nclass NavSearchBar extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            startDate: moment().startOf(\"week\"),\r\n            endDate: moment().startOf(\"week\"),\r\n            disaster: \"\",\r\n            search: \"\",\r\n            data: tweets,\r\n            \r\n        }\r\n    }\r\n    dummy_data= []\r\n    updateSearch(event){\r\n        this.setState({\r\n            search: event.target.value\r\n        })\r\n        \r\n    }\r\n    async updateDisaster(event){\r\n\r\n        this.setState({\r\n            disaster: event.target.value\r\n        })\r\n        var db = \"\"\r\n        var temp_array = []\r\n        await axios.post('https://twitter-disaster-master.herokuapp.com/refresh_data', [this.state.disaster])\r\n            .then((response) => {\r\n                db = (JSON.parse(JSON.stringify(response.data)))\r\n                for(var objects in db){\r\n                    temp_array.push(db[objects])\r\n                }\r\n                this.dummy_data = temp_array\r\n                \r\n        })\r\n        \r\n\r\n        this.setState({\r\n            data: this.dummy_data\r\n        })\r\n        \r\n        console.log(this.state.data)\r\n        \r\n    }\r\n    \r\n    \r\n    updateDate(event){\r\n        this.setState({\r\n            startDate:event.target.value,\r\n            endDate:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n   \r\n     \r\n\r\n    render() { \r\n        \r\n        return(\r\n            <div>\r\n                \r\n                <header style={{width:\"100vw\", height: \"10vh\"}}>\r\n                    <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"8vh\"}}>\r\n                        \r\n                        <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"./\">Home</Nav.Link>\r\n                            <Nav.Link href=\"./About\">About</Nav.Link>\r\n                            <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                        </Nav>\r\n                        <Form inline >\r\n                            <Form.Group> \r\n                            <DateRangePicker\r\n                                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                                startDateId=\"5\"\r\n                                endDateId=\"5\"\r\n                                onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\r\n                                updateDate={this.updateDate.bind(this)}\r\n                                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                                onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired, \r\n                                isOutsideRange={() => false}\r\n                                style={{height:\"5%\", width:\"10vw\"}}\r\n                                />\r\n\r\n                            <div>&nbsp;</div>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter Location\" \r\n                                    value = {this.state.search} \r\n                                    onChange={this.updateSearch.bind(this)}\r\n                                    style={{height:\"5vh\", width:\"10vw\"}}\r\n                                />\r\n                                <div>&nbsp;</div>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter Disaster\" \r\n                                    value = {this.state.disaster} \r\n                                    onChange={this.updateDisaster.bind(this)}\r\n                                    style={{height:\"5vh\", width:\"10vw\"}}\r\n                                />\r\n                                <div>&nbsp;</div>\r\n                            \r\n\r\n                            </Form.Group>\r\n                            \r\n                        </Form>\r\n                    </Navbar>\r\n                    \r\n                </header>\r\n                <div>\r\n                    <center>\r\n                    <TimeSeries\r\n                        data = {this.state.data}\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                    />\r\n                    </center>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <MyMap\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        search={this.state.search}\r\n                        data = {this.state.data}\r\n                    /> \r\n                    <Legend/> \r\n                    \r\n                    <CSVLink data={this.state.data}>Download me</CSVLink>;\r\n\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NavSearchBar;","import React from 'react';\r\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst About = () => {\r\n    return ( \r\n    <div>\r\n                \r\n        <header style={{width:\"100vw\", height: \"10vh\"}}>\r\n            <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"8vh\"}}>  \r\n                <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"./\">Home</Nav.Link>\r\n                    <Nav.Link href=\"./About\">About</Nav.Link>\r\n                    <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                </Nav>\r\n                \r\n            </Navbar>\r\n            \r\n        </header>\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <Jumbotron style={{width:\"60vw\",height:\"60vh\" , textAlign:\"left\", fontSize:\"3vh\"}}>\r\n                    Dedicated to our heroes in the Fire Department.\r\n                    <br></br>\r\n\r\n                    Created as a low latency service to alert first responders as well as the general population to give them information on disasters.\r\n                    Group of SIU students made this website using Machine Learning, Graphing, Mapping, and Databases. This is created to illustrate the amount of reported tweets about a given disaster such that you could ascertain whether a disaster is occurring and how often they occur within a given timeframe, as well as how often they occur throughout a given season.\r\n                    <br></br>\r\n                    Brought to you by, \r\n                    <br></br>\r\n                    Our Team, and Our School SIU! GO SALUKIS!!!\r\n\r\n                </Jumbotron>\r\n            </center>\r\n        </div>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default About;","import React from 'react';\r\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst Sourcing = () => {\r\n    return ( \r\n    <div>\r\n                \r\n        <header style={{width:\"100vw\", height: \"10vh\"}}>\r\n            <Navbar bg=\"primary\" variant=\"dark\" style={{width:\"100vw\", height: \"8vh\"}}>  \r\n                <Navbar.Brand href=\"#home\"> &nbsp;&nbsp; Tweetragety </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"./\">Home</Nav.Link>\r\n                    <Nav.Link href=\"./About\">About</Nav.Link>\r\n                    <Nav.Link href=\"./Sourcing\">Sourcing</Nav.Link>\r\n                </Nav>\r\n                \r\n            </Navbar>\r\n            \r\n        </header>\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <Jumbotron style={{width:\"60vw\",height:\"60vh\" , textAlign:\"left\", fontSize:\"3vh\"}}>\r\n                    Thanks to all the creators of the resources we used\r\n                    <br></br>\r\n                    Following Resources we used\r\n                    <br></br>\r\n                    React\r\n                    <br></br>\r\n                    Flask\r\n                    <br></br>\r\n                    Bootstrap\r\n                    <br></br>\r\n                    Leaflet\r\n                    <br></br>\r\n                    Python\r\n                    <br></br>\r\n                    Javascript\r\n                    <br></br>\r\n                    MongoDB\r\n                    <br></br>\r\n                    Chart2-React-JS\r\n                    <br></br>\r\n                    \r\n                </Jumbotron>\r\n            </center>\r\n        </div>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default Sourcing;","import React from 'react';\r\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst not_found = () => {\r\n    return ( \r\n    \r\n    <div>\r\n\r\n        <h1>404 Not Found. Testing if this works lol</h1>\r\n        \r\n    </div> \r\n    )\r\n}\r\n \r\nexport default not_found;","import React from 'react';\r\nimport NavSearchBar from './components/NavSearchBar'\r\nimport About from './components/About'\r\nimport Sourcing from './components/Sourcing'\r\nimport not_found from './components/not_found'\r\n//import NavSearchBar from './components/NavSearchBar'\r\nimport {BrowserRouter as Router, Route, Switch, HashRouter, Redirect} from \"react-router-dom\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <HashRouter basename='/'>\r\n    <Router>\r\n      <Switch> \r\n        <Route\r\n          exact path=\"/435-twitter-disaster-master/\" component={NavSearchBar}\r\n        />\r\n        <Route\r\n          exact path=\"/About\" component={About}\r\n        />\r\n        <Route\r\n          exact path=\"/Sourcing\" component={Sourcing}\r\n        />\r\n        <Route\r\n        component={not_found}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n    </HashRouter>\r\n    //<NavSearchBar/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport 'react-dates/initialize';\r\nimport 'react-with-styles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}